define(["require","exports","./Game"],function(o,r,e){"use strict";var t;return function(o){function r(o){i=document.getElementById(o),n()}function t(){n()}function n(){f=[],f.push(l()),f.push(l()),f.push(l()),f.push(l()),s()}function s(){for(;i.hasChildNodes();)i.removeChild(i.lastChild);f.forEach(function(o,r){o.render(i)})}function a(o){var r=f.filter(function(r){return r.hasCordinates(o)});return r.length>0?r[0]:null}function l(o,r){for(var t=o||Math.floor(Math.random()*h),n=r||Math.floor(Math.random()*h);a({col:t,row:n});)console.log("There is Tile already at col: %s, row %s",t,n),t=o||Math.floor(Math.random()*h),n=r||Math.floor(Math.random()*h);return new e.Tile({col:t,row:n})}var i,f,c,h=4;!function(o){o[o.left=37]="left",o[o.right=39]="right",o[o.up=38]="up",o[o.down=40]="down"}(c||(c={}));var d;!function(o){o[o.left=100]="left",o[o.right=102]="right",o[o.up=104]="up",o[o.down=98]="down"}(d||(d={})),o.Start=r,o.reset=t,document.addEventListener("keydown",function(o){var r=c[o.keyCode]||d[o.keyCode];switch(console.log(r),r){case"up":for(var e=1;e<h;e++)for(var t=0;t<h;t++){var n=a({col:t,row:e});if(n){console.log("selected tile => col: %s, row:%s",n.Cordinates.col,n.Cordinates.row);for(var s=e;s>0;){s--;var u=a({col:t,row:s});if(u){if(u.canMerge(n)){n.setGhostOfTile(u);break}if(u.IsGhost){var v=u.getGhostCordinates();n.setGhostOfCordinates({col:v.col,row:v.row+1});break}break}n.setGhostOfCordinates({col:t,row:s})}}}for(var w=f.filter(function(o){return null!==o.getGhostCordinates()}).length,e=1;e<h;e++)for(var t=0;t<h;t++){var n=a({col:t,row:e});n&&n.process()}if(w>0){var g=l(null,h-1);f.push(g),g.render(i)}break;case"down":for(var e=h-2;e>=0;e--)for(var t=0;t<h;t++){var n=a({col:t,row:e});if(n){console.log("selected tile => col: %s, row:%s",n.Cordinates.col,n.Cordinates.row);for(var s=e;s<h-1;){s++;var u=a({col:t,row:s});if(u){if(u.canMerge(n)){n.setGhostOfTile(u);break}if(u.IsGhost){var v=u.getGhostCordinates();n.setGhostOfCordinates({col:v.col,row:v.row-1});break}break}n.setGhostOfCordinates({col:t,row:s})}}}for(var w=f.filter(function(o){return null!==o.getGhostCordinates()}).length,e=h-2;e>=0;e--)for(var t=0;t<h;t++){var n=a({col:t,row:e});n&&n.process()}if(w>0){var g=l(null,0);f.push(g),g.render(i)}break;case"left":for(var t=1;t<h;t++)for(var e=0;e<h;e++){var n=a({row:e,col:t});if(n){console.log("selected tile => row: %s, col:%s",n.Cordinates.row,n.Cordinates.col);for(var s=t;s>0;){s--;var u=a({row:e,col:s});if(u){if(u.canMerge(n)){n.setGhostOfTile(u);break}if(u.IsGhost){var v=u.getGhostCordinates();n.setGhostOfCordinates({row:v.row,col:v.col+1});break}break}n.setGhostOfCordinates({row:e,col:s})}}}for(var w=f.filter(function(o){return null!==o.getGhostCordinates()}).length,t=1;t<h;t++)for(var e=0;e<h;e++){var n=a({row:e,col:t});n&&n.process()}if(w>0){var g=l(h-1,null);f.push(g),g.render(i)}break;case"right":for(var t=h-2;t>=0;t--)for(var e=0;e<h;e++){var n=a({row:e,col:t});if(n){console.log("selected tile => row: %s, col:%s",n.Cordinates.row,n.Cordinates.col);for(var s=t;s<h-1;){s++;var u=a({row:e,col:s});if(u){if(u.canMerge(n)){n.setGhostOfTile(u);break}if(u.IsGhost){var v=u.getGhostCordinates();n.setGhostOfCordinates({row:v.row,col:v.col-1});break}break}n.setGhostOfCordinates({row:e,col:s})}}}for(var w=f.filter(function(o){return null!==o.getGhostCordinates()}).length,t=h-2;t>=0;t--)for(var e=0;e<h;e++){var n=a({row:e,col:t});n&&n.process()}if(w>0){var g=l(0,null);f.push(g),g.render(i)}}console.log(f),f=f.filter(function(o){return!o.IsMerged}),console.log(f),f.forEach(function(o){o.cleanUp()})})}(t||(t={})),t});