define(["require","exports","./Game"],function(o,e,r){"use strict";var t;return function(o){function e(o){i=document.getElementById(o),n()}function t(){n()}function n(){c=[],c.push(a(0,0)),c.push(a(0,1)),c.push(a(0,3)),s()}function s(){for(;i.hasChildNodes();)i.removeChild(i.lastChild);c.forEach(function(o,e){o.render(i)})}function l(o){var e=c.filter(function(e){return e.hasCordinates(o)});return e.length>0?e[0]:null}function a(o,e){for(var t=null!==o&&o>=0?o:Math.floor(Math.random()*f),n=null!==e&&e>=0?e:Math.floor(Math.random()*f);l({col:t,row:n});)var t=null!==o&&o>=0?o:Math.floor(Math.random()*f),n=null!==e&&e>=0?e:Math.floor(Math.random()*f);return new r.Tile({col:t,row:n})}var i,c,d,f=4;!function(o){o[o.left=37]="left",o[o.right=39]="right",o[o.up=38]="up",o[o.down=40]="down"}(d||(d={}));var h;!function(o){o[o.left=100]="left",o[o.right=102]="right",o[o.up=104]="up",o[o.down=98]="down"}(h||(h={})),o.Start=e,o.reset=t,document.addEventListener("keydown",function(o){var e=d[o.keyCode]||h[o.keyCode];switch(console.debug("Arrow Key Pressed: %s",e),e){case"up":for(var r=0,t=1;t<f;t++){var n=c.filter(function(o){return o.Cordinates.row===t});n.length&&console.log("found %s tile(s) in %s row",n.length,t),n.forEach(function(o){console.log("selected tile (%s,%s)",o.Cordinates.col,o.Cordinates.row);for(var e=o.Cordinates.row;e>0;){e--,console.log("\ttrying at (%s,%s)",o.Cordinates.col,e);var t=l({col:o.Cordinates.col,row:e});if(t){if(t.canMerge(o)){var n=t.getGhostCordinates();console.log("\tmerged at (%s,%s)",n.col,n.row),o.setGhostOfTile(t),r++;break}if(t.IsGhost){var s=t.getGhostCordinates();o.setGhostOfCordinates({col:s.col,row:s.row+1}),console.log("\tmove at (%s,%s)",s.col,s.row+1),r++;break}console.log("\tnot moving here");break}r++,o.setGhostOfCordinates({col:o.Cordinates.col,row:e})}var n=o.getGhostCordinates();console.log("\tendded at (%s,%s)",n.col,n.row)})}if(r>0){c.forEach(function(o){var e=o.process();e&&e.then(function(){c.splice(c.indexOf(o),1)})});var s=a(null,f-1);c.push(s),s.render(i)}break;case"down":for(var r=0,t=f-2;t>=0;t--){var n=c.filter(function(o){return o.Cordinates.row===t});n.length&&console.log("found %s tile(s) in %s row",n.length,t),n.forEach(function(o){console.log("selected tile (%s,%s)",o.Cordinates.col,o.Cordinates.row);for(var e=o.Cordinates.row;e<f-1;){e++,console.log("\ttrying at (%s,%s)",o.Cordinates.col,e);var t=l({col:o.Cordinates.col,row:e});if(t){if(t.canMerge(o)){var n=t.getGhostCordinates();console.log("\tmerged at (%s,%s)",n.col,n.row),o.setGhostOfTile(t),r++;break}if(t.IsGhost){var s=t.getGhostCordinates();o.setGhostOfCordinates({col:s.col,row:s.row-1}),console.log("\tmove at (%s,%s)",s.col,s.row-1),r++;break}console.log("\tnot moving here");break}r++,o.setGhostOfCordinates({col:o.Cordinates.col,row:e})}var n=o.getGhostCordinates();console.log("\tendded at (%s,%s)",n.col,n.row)})}if(r>0){c.forEach(function(o){var e=o.process();e&&e.then(function(){c.splice(c.indexOf(o),1)})});var s=a(null,0);c.push(s),s.render(i)}break;case"left":for(var r=0,g=1;g<f;g++){var n=c.filter(function(o){return o.Cordinates.col===g});n.length&&console.log("found %s tile(s) in %s col",n.length,g),n.forEach(function(o){console.log("selected tile (%s,%s)",o.Cordinates.col,o.Cordinates.row);for(var e=o.Cordinates.col;e>0;){e--,console.log("\ttrying at (%s,%s)",e,o.Cordinates.row);var t=l({col:e,row:o.Cordinates.row});if(t){if(t.canMerge(o)){var n=t.getGhostCordinates();console.log("\tmerged at (%s,%s)",n.col,n.row),o.setGhostOfTile(t),r++;break}if(t.IsGhost){var s=t.getGhostCordinates();o.setGhostOfCordinates({col:s.col+1,row:s.row}),console.log("\tmove at (%s,%s)",s.col+1,s.row),r++;break}console.log("\tnot moving here");break}r++,o.setGhostOfCordinates({col:e,row:o.Cordinates.row})}var n=o.getGhostCordinates();console.log("\tendded at (%s,%s)",n.col,n.row)})}if(r>0){c.forEach(function(o){var e=o.process();e&&e.then(function(){c.splice(c.indexOf(o),1)})});var s=a(f-1,null);c.push(s),s.render(i)}break;case"right":for(var r=0,g=f-2;g>=0;g--){var n=c.filter(function(o){return o.Cordinates.col===g});n.length&&console.log("found %s tile(s) in %s col",n.length,g),n.forEach(function(o){console.log("selected tile (%s,%s)",o.Cordinates.col,o.Cordinates.row);for(var e=o.Cordinates.col;e<f-1;){e++,console.log("\ttrying at (%s,%s)",e,o.Cordinates.row);var t=l({col:e,row:o.Cordinates.row});if(t){if(t.canMerge(o)){var n=t.getGhostCordinates();console.log("\tmerged at (%s,%s)",n.col,n.row),o.setGhostOfTile(t),r++;break}if(t.IsGhost){var s=t.getGhostCordinates();o.setGhostOfCordinates({col:s.col-1,row:s.row}),console.log("\tmove at (%s,%s)",s.col-1,s.row),r++;break}console.log("\tnot moving here");break}r++,o.setGhostOfCordinates({col:e,row:o.Cordinates.row})}var n=o.getGhostCordinates();console.log("\tendded at (%s,%s)",n.col,n.row)})}if(r>0){c.forEach(function(o){var e=o.process();e&&e.then(function(){c.splice(c.indexOf(o),1)})});var s=a(0,null);c.push(s),s.render(i)}}c=c.filter(function(o){return!o.IsMerged}),c.forEach(function(o){o.cleanUp()})})}(t||(t={})),t});